{
  "kind": "collectionType",
  "collectionName": "posts",
  "info": {
    "singularName": "post",
    "pluralName": "posts",
    "displayName": "Posts",
    "description": ""
  },
  "options": {
    "draftAndPublish": true
  },
  "attributes": {
    "title": {
      "type": "string"
    },
    "description": {
      "type": "text"
    },
    "type": {
      "type": "enumeration",
      "enum": [
        "post",
        "prayer_request",
        "testimonial"
      ]
    },
    "image_urls": {
      "type": "text"
    },
    "video_urls": {
      "type": "text"
    },
    "is_flagged": {
      "type": "boolean",
      "default": false
    },
    "is_archived": {
      "type": "boolean",
      "default": false
    },
    "is_deleted": {
      "type": "boolean",
      "default": false
    },
    "user_prayers": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::user-prayer.user-prayer",
      "mappedBy": "user_post"
    },
    "post_follows": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::post-follow.post-follow",
      "mappedBy": "post_id"
    },
    "post_histories": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::post-history.post-history",
      "mappedBy": "post_id"
    },
    "flag_reason": {
      "type": "enumeration",
      "enum": [
        "hate speech",
        "scam or fraude",
        "false information",
        "sexual content",
        "voilence",
        "something else"
      ]
    },
    "prayer_count": {
      "type": "integer",
      "default": 0
    },
    "creator_id": {
      "type": "string",
      "required": true
    },
    "parent_id": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::post.post",
      "inversedBy": "update_id"
    },
    "update_id": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::post.post",
      "mappedBy": "parent_id"
    },
    "creator": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "plugin::users-permissions.user",
      "inversedBy": "posts"
    },
    "music": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::music-library.music-library",
      "inversedBy": "posts"
    }
  }
}
