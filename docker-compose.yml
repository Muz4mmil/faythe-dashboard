networks:
  strapi-net:
    driver: bridge

volumes:
  strapi-uploads: {}
  strapi-tmp: {}
  prometheus_data: {}
  grafana_data: {}

services:
  strapi:
    build: .
    container_name: strapi-admin
    environment:
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_SSL=${DATABASE_SSL}
      - APP_KEYS=${APP_KEYS}
      - API_TOKEN_SALT=${API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}
      - JWT_SECRET=${JWT_SECRET}
      - HOST=0.0.0.0
      - PORT=1337
      - URL=http://localhost
    volumes:
      - strapi-uploads:/app/public/uploads
      - strapi-tmp:/app/.tmp
    restart: always
    networks:
      - strapi-net
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/_health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: strapi-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - strapi-uploads:/app/public/uploads:ro
    depends_on:
      - strapi
      - prometheus
      - grafana
    restart: always
    networks:
      - strapi-net

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER_FILE=/run/secrets/grafana_admin_user
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
    secrets:
      - grafana_admin_user
      - grafana_admin_password
    networks:
      - strapi-net
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - strapi-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # âœ… Add this line
      - prometheus_data:/prometheus
    restart: always


  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: always
    networks:
      - strapi-net

secrets:
  grafana_admin_user:
    file: ./grafana_admin_user.txt
  grafana_admin_password:
    file: ./grafana_admin_password.txt